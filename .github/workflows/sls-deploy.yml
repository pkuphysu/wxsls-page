name: Deploy Serverless

on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - "**.md"

jobs:
  deploy:
    name: deploy serverless
    runs-on: ubuntu-latest
    if: ${{ ! contains(github.event.head_commit.message, '[skip-deploy]') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v1.4.4
        with:
          version: 12.x
      - uses: actions/cache@v2
        with:
          path: node_modules
          id: cache
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-
      - name: Install package
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
      - name: Determine env
        id: env
        run: |
          if [ $GITHUB_REF == 'refs/heads/master' ]; then
            echo '::set-output name=stage::prod'
            echo "::set-output name=appid::$APPID_PROD"
          else
            echo '::set-output name=stage::dev'
            echo "::set-output name=appid::$APPID_DEV"
          fi
        env:
          APPID_PROD: ${{ secrets.APPID_PROD }}
          APPID_DEV: ${{ secrets.APPID_DEV }}
      - name: Install serverless
        run: curl -o- -L https://slss.io/install | bash
      - name: Deploy serverless website
        timeout-minutes: 5
        run: |
          set -o pipefail
          $HOME/.serverless/bin/sls deploy | grep -v -e 'ä¸­ ' -e 'ing ' -e NA
        env:
          STAGE: ${{ steps.env.outputs.stage }}
          APPID: ${{ steps.env.outputs.appid }}
          SERVERLESS_PLATFORM_VENDOR: tencent
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
